    /* ... (Variables, Root, Scrolling, Header, Buttons styles remain the same as in treeview_css_layout_fixes_v2) ... */

    /******************************************************************************
     * SortableTree styles & Icon Fixes
     *****************************************************************************/

    .tree {
        display: flex;
        flex-direction: column;
      margin: 0 0.5rem; /* Remove top/bottom margin */
      padding-left: 0; /* Let SortableTree handle internal padding */
    }

    /* --- Icon Fixes Start --- */

    /* Style the default collapse/expand icon container (.tree__collapse is the SPAN) */
    .tree__collapse {
      color: var(--editor-command-button-color);
      display: flex;
      align-items: center;
      justify-content: center;
      width: var(--st-collapse-icon-width);
      height: var(--st-collapse-icon-height);
      position: relative;
      cursor: pointer;
      font-size: 0; /* Hide potential text content inside */
      flex-shrink: 0; /* Prevent shrinking */
    }
    /* Add the chevron icon using ::before */
    .tree__collapse::before {
        content: "";
        display: inline-block;
        width: 1em;
        height: 1em;
        font-size: var(--st-collapse-icon-size); /* Control size */
        background-color: currentColor;
        -webkit-mask-repeat: no-repeat; mask-repeat: no-repeat;
        -webkit-mask-size: 100% 100%; mask-size: 100% 100%;
    }

    /* Icon for COLLAPSED state */
    sortable-tree-node:not([open]) > .tree__collapse::before {
       -webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="9 18 15 12 9 6"></polyline></svg>');
       mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="9 18 15 12 9 6"></polyline></svg>');
    }

    /* Icon for EXPANDED state */
    sortable-tree-node[open] > .tree__collapse::before {
       -webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>');
       mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="6 9 12 15 18 9"></polyline></svg>');
    }

    /* Hide collapse icon container if node has no children */
    sortable-tree-node > div:nth-child(2):empty + .tree__collapse {
       visibility: hidden;
    }
    /* Also hide for page nodes */
    sortable-tree-node[data-node-type="page"] > .tree__collapse {
         visibility: hidden;
    }

    /* General style for the node text container (span) */
    .tree__label > span {
      overflow: hidden;
      padding: 1px 5px;
      border-color: transparent;
      border-width: var(--treeview-node-border-width);
      border-style: solid;
      border-radius: var(--treeview-node-border-radius);
      cursor: pointer;
      font-family: var(--editor-font);
      font-size: 15px;
      line-height: 1.4;
      text-decoration: none;
      white-space: nowrap;
      text-overflow: ellipsis;
      display: inline-flex;
      align-items: center;
      margin-bottom: 1px;
      position: relative;
    }

    /* Add icons using ::before ONLY FOR PAGE NODES */
    /* Ensure NO ::before rules exist here for folder or tag */
    .tree__label > span[data-node-type="page"]::before {
      display: inline-block;
      margin-right: 5px;
      vertical-align: -0.1em;
      width: 1em;
      height: 1em;
      line-height: 1;
      background-color: currentColor;
      content: "";
      -webkit-mask-repeat: no-repeat; mask-repeat: no-repeat;
      -webkit-mask-size: 100% 100%; mask-size: 100% 100%;
      /* File Icon */
      -webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline></svg>');
      mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline></svg>');
    }

    /* --- Icon Fixes End --- */


    /* Specific node type background/color styling */
    .tree__label > span[data-node-type="folder"] {
      background-color: var(--treeview-folder-background-color);
      border-color: var(--treeview-folder-border-color);
      color: var(--treeview-folder-color);
    }
    .tree__label > span[data-node-type="tag"] {
      background-color: var(--treeview-tag-background-color);
      border-color: var(--treeview-tag-border-color);
      color: var(--treeview-tag-color);
    }
    .tree__label > span[data-node-type="page"] {
      background-color: var(--treeview-page-background-color);
      border-color: var(--treeview-page-border-color);
      color: var(--treeview-page-color);
    }

    /* Style for the page count within the tag label */
    .treeview-node-pagecount {
      font-size: 0.85em;
      margin-left: 6px;
      opacity: 0.6;
      display: inline-block;
      vertical-align: baseline;
      padding-left: 2px;
    }

    /* Hover effect */
    .tree__label > span[data-node-type="tag"]:hover,
    .tree__label > span[data-node-type="folder"]:hover,
    .tree__label > span[data-node-type="page"]:hover {
        background-color: var(--subtle-background-color);
        border-color: var(--ui-accent-color);
    }

    /* D&D styles */
    /* ... (Keep D&D styles as before or remove if never enabling) ... */
    .tree__label:after { content: ' '; position: absolute; z-index: 4; inset: calc(var(--treeview-node-border-width) * -1) var(--treeview-node-border-width); border-top: calc(var(--treeview-node-border-width) * 2) solid transparent; border-bottom: calc(var(--treeview-node-border-width) * 2) solid transparent; transition: border-color 0.2s; pointer-events: none; }
    .tree__node--drop-before > .tree__label:after { border-top-color: var(--ui-accent-color); }
    .tree__node--drop-after > .tree__label:after { border-bottom-color: var(--ui-accent-color); }
    .tree__node--dragging { margin: calc(var(--treeview-node-border-width) * -1); border: var(--treeview-node-border-width) dashed var(--subtle-color); border-radius: var(--treeview-node-border-radius); cursor: move !important; opacity: 0.75; }
    .tree__node--dragging .tree__label > span { opacity: 0.75; }
    .tree__node--drop-inside > .tree__label > span { z-index: 3; background-color: var(--subtle-background-color); border-color: var(--ui-accent-color); }

    
